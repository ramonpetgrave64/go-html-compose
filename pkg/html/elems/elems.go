// Code generated by "go run -C ../generate ./cmd/generate/"; DO NOT EDIT.
// HTML spec at https://html.spec.whatwg.org/multipage/indices.html

package elems

import "go-html-compose/pkg/doc"

// Special Elements

// Doctype is a required preamble.
var Doctype = doc.UnitTag("!DOCTYPE html")

// Regular Elements

// A
// Description: Hyperlink.
// Parents: phrasing.
// Children: transparent*.
// Attributes: globals; href; target; download; ping; rel; hreflang; type; referrerpolicy
func A(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("a", attrs...)
}

// Abbr
// Description: Abbreviation.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Abbr(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("abbr", attrs...)
}

// Address
// Description: Contact information for a page or article element.
// Parents: flow.
// Children: flow*.
// Attributes: globals
func Address(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("address", attrs...)
}

// Area
// Description: Hyperlink or dead area on an image map.
// Parents: phrasing*.
// Children: empty.
// Attributes: globals; alt; coords; shape; href; target; download; ping; rel; referrerpolicy
func Area(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("area", attrs...)
}

// Article
// Description: Self-contained syndicatable or reusable composition.
// Parents: flow.
// Children: flow.
// Attributes: globals
func Article(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("article", attrs...)
}

// Aside
// Description: Sidebar for tangentially related content.
// Parents: flow.
// Children: flow.
// Attributes: globals
func Aside(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("aside", attrs...)
}

// Audio
// Description: Audio player.
// Parents: phrasing.
// Children: source*; track*; transparent*.
// Attributes: globals; src; crossorigin; preload; autoplay; loop; muted; controls
func Audio(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("audio", attrs...)
}

// B
// Description: Keywords.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func B(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("b", attrs...)
}

// Base
// Description: Base URL and default target navigable for hyperlinks and forms.
// Parents: head.
// Children: empty.
// Attributes: globals; href; target
func Base(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("base", attrs...)
}

// Bdi
// Description: Text directionality isolation.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Bdi(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("bdi", attrs...)
}

// Bdo
// Description: Text directionality formatting.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Bdo(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("bdo", attrs...)
}

// Blockquote
// Description: A section quoted from another source.
// Parents: flow.
// Children: flow.
// Attributes: globals; cite
func Blockquote(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("blockquote", attrs...)
}

// Body
// Description: Document body.
// Parents: html.
// Children: flow.
// Attributes: globals; onafterprint; onbeforeprint; onbeforeunload; onhashchange; onlanguagechange; onmessage; onmessageerror; onoffline; ononline; onpageswap; onpagehide; onpagereveal; onpageshow; onpopstate; onrejectionhandled; onstorage; onunhandledrejection; onunload
func Body(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("body", attrs...)
}

// Br
// Description: Line break, e.g. in poem or postal address.
// Parents: phrasing.
// Children: empty.
// Attributes: globals
func Br(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("br", attrs...)
}

// Button
// Description: Button control.
// Parents: phrasing.
// Children: phrasing*.
// Attributes: globals; command; commandfor; disabled; form; formaction; formenctype; formmethod; formnovalidate; formtarget; name; popovertarget; popovertargetaction; type; value
func Button(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("button", attrs...)
}

// Canvas
// Description: Scriptable bitmap canvas.
// Parents: phrasing.
// Children: transparent.
// Attributes: globals; width; height
func Canvas(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("canvas", attrs...)
}

// Caption
// Description: Table caption.
// Parents: table.
// Children: flow*.
// Attributes: globals
func Caption(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("caption", attrs...)
}

// Cite
// Description: Title of a work.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Cite(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("cite", attrs...)
}

// Code
// Description: Computer code.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Code(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("code", attrs...)
}

// Col
// Description: Table column.
// Parents: colgroup.
// Children: empty.
// Attributes: globals; span
func Col(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("col", attrs...)
}

// Colgroup
// Description: Group of columns in a table.
// Parents: table.
// Children: col*; template*.
// Attributes: globals; span
func Colgroup(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("colgroup", attrs...)
}

// Data
// Description: Machine-readable equivalent.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals; value
func Data(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("data", attrs...)
}

// Datalist
// Description: Container for options for combo box control.
// Parents: phrasing.
// Children: phrasing*; option*; script-supporting elements*.
// Attributes: globals
func Datalist(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("datalist", attrs...)
}

// Dd
// Description: Content for corresponding dt element(s).
// Parents: dl; div*.
// Children: flow.
// Attributes: globals
func Dd(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("dd", attrs...)
}

// Del
// Description: A removal from the document.
// Parents: phrasing.
// Children: transparent.
// Attributes: globals; cite; datetime
func Del(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("del", attrs...)
}

// Details
// Description: Disclosure control for hiding details.
// Parents: flow.
// Children: summary*; flow.
// Attributes: globals; name; open
func Details(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("details", attrs...)
}

// Dfn
// Description: Defining instance.
// Parents: phrasing.
// Children: phrasing*.
// Attributes: globals
func Dfn(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("dfn", attrs...)
}

// Dialog
// Description: Dialog box or window.
// Parents: flow.
// Children: flow.
// Attributes: globals; open
func Dialog(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("dialog", attrs...)
}

// Div
// Description: Generic flow container, or container for name-value groups in dl elements.
// Parents: flow; dl.
// Children: flow.
// Attributes: globals
func Div(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("div", attrs...)
}

// Dl
// Description: Association list consisting of zero or more name-value groups.
// Parents: flow.
// Children: dt*; dd*; div*; script-supporting elements.
// Attributes: globals
func Dl(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("dl", attrs...)
}

// Dt
// Description: Legend for corresponding dd element(s).
// Parents: dl; div*.
// Children: flow*.
// Attributes: globals
func Dt(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("dt", attrs...)
}

// Em
// Description: Stress emphasis.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Em(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("em", attrs...)
}

// Embed
// Description: Plugin.
// Parents: phrasing.
// Children: empty.
// Attributes: globals; src; type; width; height; any*
func Embed(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("embed", attrs...)
}

// Fieldset
// Description: Group of form controls.
// Parents: flow.
// Children: legend*; flow.
// Attributes: globals; disabled; form; name
func Fieldset(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("fieldset", attrs...)
}

// Figcaption
// Description: Caption for figure.
// Parents: figure.
// Children: flow.
// Attributes: globals
func Figcaption(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("figcaption", attrs...)
}

// Figure
// Description: Figure with optional caption.
// Parents: flow.
// Children: figcaption*; flow.
// Attributes: globals
func Figure(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("figure", attrs...)
}

// Footer
// Description: Footer for a page or section.
// Parents: flow.
// Children: flow*.
// Attributes: globals
func Footer(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("footer", attrs...)
}

// Form
// Description: User-submittable form.
// Parents: flow.
// Children: flow*.
// Attributes: globals; accept-charset; action; autocomplete; enctype; method; name; novalidate; rel; target
func Form(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("form", attrs...)
}

// H1
// Description: Heading.
// Parents: legend; summary; flow.
// Children: phrasing.
// Attributes: globals
func H1(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("h1", attrs...)
}

// H2
// Description: Heading.
// Parents: legend; summary; flow.
// Children: phrasing.
// Attributes: globals
func H2(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("h2", attrs...)
}

// H3
// Description: Heading.
// Parents: legend; summary; flow.
// Children: phrasing.
// Attributes: globals
func H3(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("h3", attrs...)
}

// H4
// Description: Heading.
// Parents: legend; summary; flow.
// Children: phrasing.
// Attributes: globals
func H4(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("h4", attrs...)
}

// H5
// Description: Heading.
// Parents: legend; summary; flow.
// Children: phrasing.
// Attributes: globals
func H5(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("h5", attrs...)
}

// H6
// Description: Heading.
// Parents: legend; summary; flow.
// Children: phrasing.
// Attributes: globals
func H6(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("h6", attrs...)
}

// Head
// Description: Container for document metadata.
// Parents: html.
// Children: metadata content*.
// Attributes: globals
func Head(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("head", attrs...)
}

// Header
// Description: Introductory or navigational aids for a page or section.
// Parents: flow.
// Children: flow*.
// Attributes: globals
func Header(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("header", attrs...)
}

// Hgroup
// Description: Heading container.
// Parents: legend; summary; flow.
// Children: h1; h2; h3; h4; h5; h6; script-supporting elements.
// Attributes: globals
func Hgroup(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("hgroup", attrs...)
}

// Hr
// Description: Thematic break.
// Parents: flow.
// Children: empty.
// Attributes: globals
func Hr(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("hr", attrs...)
}

// Html
// Description: Root element.
// Parents: none*.
// Children: head*; body*.
// Attributes: globals
func Html(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("html", attrs...)
}

// I
// Description: Alternate voice.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func I(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("i", attrs...)
}

// Iframe
// Description: Child navigable.
// Parents: phrasing.
// Children: empty.
// Attributes: globals; src; srcdoc; name; sandbox; allow; allowfullscreen; width; height; referrerpolicy; loading
func Iframe(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("iframe", attrs...)
}

// Img
// Description: Image.
// Parents: phrasing; picture.
// Children: empty.
// Attributes: globals; alt; src; srcset; sizes; crossorigin; usemap; ismap; width; height; referrerpolicy; decoding; loading; fetchpriority
func Img(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("img", attrs...)
}

// Input
// Description: Form control.
// Parents: phrasing.
// Children: empty.
// Attributes: globals; accept; alpha; alt; autocomplete; checked; colorspace; dirname; disabled; form; formaction; formenctype; formmethod; formnovalidate; formtarget; height; list; max; maxlength; min; minlength; multiple; name; pattern; placeholder; popovertarget; popovertargetaction; readonly; required; size; src; step; type; value; width
func Input(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("input", attrs...)
}

// Ins
// Description: An addition to the document.
// Parents: phrasing.
// Children: transparent.
// Attributes: globals; cite; datetime
func Ins(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("ins", attrs...)
}

// Kbd
// Description: User input.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Kbd(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("kbd", attrs...)
}

// Label
// Description: Caption for a form control.
// Parents: phrasing.
// Children: phrasing*.
// Attributes: globals; for
func Label(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("label", attrs...)
}

// Legend
// Description: Caption for fieldset.
// Parents: fieldset.
// Children: phrasing; heading content.
// Attributes: globals
func Legend(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("legend", attrs...)
}

// Li
// Description: List item.
// Parents: ol; ul; menu*.
// Children: flow.
// Attributes: globals; value*
func Li(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("li", attrs...)
}

// Link
// Description: Link metadata.
// Parents: head; noscript*; phrasing*.
// Children: empty.
// Attributes: globals; href; crossorigin; rel; as; media; hreflang; type; sizes; imagesrcset; imagesizes; referrerpolicy; integrity; blocking; color; disabled; fetchpriority
func Link(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("link", attrs...)
}

// Main
// Description: Container for the dominant contents of the document.
// Parents: flow*.
// Children: flow.
// Attributes: globals
func Main(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("main", attrs...)
}

// Map
// Description: Image map.
// Parents: phrasing.
// Children: transparent; area*.
// Attributes: globals; name
func Map(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("map", attrs...)
}

// Mark
// Description: Highlight.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Mark(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("mark", attrs...)
}

// Math
// Description: MathML root.
// Parents: phrasing.
// Children: per [MATHML].
// Attributes: per [MATHML]
func Math(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("math", attrs...)
}

// Menu
// Description: Menu of commands.
// Parents: flow.
// Children: li; script-supporting elements.
// Attributes: globals
func Menu(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("menu", attrs...)
}

// Meta
// Description: Text metadata.
// Parents: head; noscript*; phrasing*.
// Children: empty.
// Attributes: globals; name; http-equiv; content; charset; media
func Meta(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("meta", attrs...)
}

// Meter
// Description: Gauge.
// Parents: phrasing.
// Children: phrasing*.
// Attributes: globals; value; min; max; low; high; optimum
func Meter(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("meter", attrs...)
}

// Nav
// Description: Section with navigational links.
// Parents: flow.
// Children: flow.
// Attributes: globals
func Nav(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("nav", attrs...)
}

// Noscript
// Description: Fallback content for script.
// Parents: head*; phrasing*.
// Children: varies*.
// Attributes: globals
func Noscript(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("noscript", attrs...)
}

// Object
// Description: Image, child navigable, or plugin.
// Parents: phrasing.
// Children: transparent.
// Attributes: globals; data; type; name; form; width; height
func Object(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("object", attrs...)
}

// Ol
// Description: Ordered list.
// Parents: flow.
// Children: li; script-supporting elements.
// Attributes: globals; reversed; start; type
func Ol(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("ol", attrs...)
}

// Optgroup
// Description: Group of options in a list box.
// Parents: select.
// Children: option; script-supporting elements.
// Attributes: globals; disabled; label
func Optgroup(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("optgroup", attrs...)
}

// Option
// Description: Option in a list box or combo box control.
// Parents: select; datalist; optgroup.
// Children: text*.
// Attributes: globals; disabled; label; selected; value
func Option(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("option", attrs...)
}

// Output
// Description: Calculated output value.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals; for; form; name
func Output(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("output", attrs...)
}

// P
// Description: Paragraph.
// Parents: flow.
// Children: phrasing.
// Attributes: globals
func P(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("p", attrs...)
}

// Picture
// Description: Image.
// Parents: phrasing.
// Children: source*; one img; script-supporting elements.
// Attributes: globals
func Picture(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("picture", attrs...)
}

// Pre
// Description: Block of preformatted text.
// Parents: flow.
// Children: phrasing.
// Attributes: globals
func Pre(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("pre", attrs...)
}

// Progress
// Description: Progress bar.
// Parents: phrasing.
// Children: phrasing*.
// Attributes: globals; value; max
func Progress(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("progress", attrs...)
}

// Q
// Description: Quotation.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals; cite
func Q(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("q", attrs...)
}

// Rp
// Description: Parenthesis for ruby annotation text.
// Parents: ruby.
// Children: text.
// Attributes: globals
func Rp(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("rp", attrs...)
}

// Rt
// Description: Ruby annotation text.
// Parents: ruby.
// Children: phrasing.
// Attributes: globals
func Rt(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("rt", attrs...)
}

// Ruby
// Description: Ruby annotation(s).
// Parents: phrasing.
// Children: phrasing; rt; rp*.
// Attributes: globals
func Ruby(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("ruby", attrs...)
}

// S
// Description: Inaccurate text.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func S(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("s", attrs...)
}

// Samp
// Description: Computer output.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Samp(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("samp", attrs...)
}

// Script
// Description: Embedded script.
// Parents: head; phrasing; script-supporting.
// Children: script, data, or script documentation*.
// Attributes: globals; src; type; nomodule; async; defer; crossorigin; integrity; referrerpolicy; blocking; fetchpriority
func Script(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("script", attrs...)
}

// Search
// Description: Container for search controls.
// Parents: flow.
// Children: flow.
// Attributes: globals
func Search(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("search", attrs...)
}

// Section
// Description: Generic document or application section.
// Parents: flow.
// Children: flow.
// Attributes: globals
func Section(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("section", attrs...)
}

// Select
// Description: List box control.
// Parents: phrasing.
// Children: option; optgroup; script-supporting elements.
// Attributes: globals; autocomplete; disabled; form; multiple; name; required; size
func Select(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("select", attrs...)
}

// Slot
// Description: Shadow tree slot.
// Parents: phrasing.
// Children: transparent.
// Attributes: globals; name
func Slot(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("slot", attrs...)
}

// Small
// Description: Side comment.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Small(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("small", attrs...)
}

// Source
// Description: Image source for img or media source for video or audio.
// Parents: picture; video; audio.
// Children: empty.
// Attributes: globals; type; media; src; srcset; sizes; width; height
func Source(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("source", attrs...)
}

// Span
// Description: Generic phrasing container.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Span(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("span", attrs...)
}

// Strong
// Description: Importance.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Strong(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("strong", attrs...)
}

// Style
// Description: Embedded styling information.
// Parents: head; noscript*.
// Children: text*.
// Attributes: globals; media; blocking
func Style(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("style", attrs...)
}

// Sub
// Description: Subscript.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Sub(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("sub", attrs...)
}

// Summary
// Description: Caption for details.
// Parents: details.
// Children: phrasing; heading content.
// Attributes: globals
func Summary(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("summary", attrs...)
}

// Sup
// Description: Superscript.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Sup(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("sup", attrs...)
}

// Svg
// Description: SVG root.
// Parents: phrasing.
// Children: per [SVG].
// Attributes: per [SVG]
func Svg(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("svg", attrs...)
}

// Table
// Description: Table.
// Parents: flow.
// Children: caption*; colgroup*; thead*; tbody*; tfoot*; tr*; script-supporting elements.
// Attributes: globals
func Table(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("table", attrs...)
}

// Tbody
// Description: Group of rows in a table.
// Parents: table.
// Children: tr; script-supporting elements.
// Attributes: globals
func Tbody(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("tbody", attrs...)
}

// Td
// Description: Table cell.
// Parents: tr.
// Children: flow.
// Attributes: globals; colspan; rowspan; headers
func Td(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("td", attrs...)
}

// Template
// Description: Template.
// Parents: metadata; phrasing; script-supporting; colgroup*.
// Children: empty.
// Attributes: globals; shadowrootmode; shadowrootdelegatesfocus; shadowrootclonable; shadowrootserializable
func Template(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("template", attrs...)
}

// Textarea
// Description: Multiline text controls.
// Parents: phrasing.
// Children: text.
// Attributes: globals; autocomplete; cols; dirname; disabled; form; maxlength; minlength; name; placeholder; readonly; required; rows; wrap
func Textarea(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("textarea", attrs...)
}

// Tfoot
// Description: Group of footer rows in a table.
// Parents: table.
// Children: tr; script-supporting elements.
// Attributes: globals
func Tfoot(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("tfoot", attrs...)
}

// Th
// Description: Table header cell.
// Parents: tr.
// Children: flow*.
// Attributes: globals; colspan; rowspan; headers; scope; abbr
func Th(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("th", attrs...)
}

// Thead
// Description: Group of heading rows in a table.
// Parents: table.
// Children: tr; script-supporting elements.
// Attributes: globals
func Thead(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("thead", attrs...)
}

// Time
// Description: Machine-readable equivalent of date- or time-related data.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals; datetime
func Time(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("time", attrs...)
}

// Title
// Description: Document title.
// Parents: head.
// Children: text*.
// Attributes: globals
func Title(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("title", attrs...)
}

// Tr
// Description: Table row.
// Parents: table; thead; tbody; tfoot.
// Children: th*; td; script-supporting elements.
// Attributes: globals
func Tr(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("tr", attrs...)
}

// Track
// Description: Timed text track.
// Parents: audio; video.
// Children: empty.
// Attributes: globals; default; kind; label; src; srclang
func Track(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("track", attrs...)
}

// U
// Description: Unarticulated annotation.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func U(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("u", attrs...)
}

// Ul
// Description: List.
// Parents: flow.
// Children: li; script-supporting elements.
// Attributes: globals
func Ul(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("ul", attrs...)
}

// Var
// Description: Variable.
// Parents: phrasing.
// Children: phrasing.
// Attributes: globals
func Var(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("var", attrs...)
}

// Video
// Description: Video player.
// Parents: phrasing.
// Children: source*; track*; transparent*.
// Attributes: globals; src; crossorigin; poster; preload; autoplay; playsinline; loop; muted; controls; width; height
func Video(attrs ...*doc.AttributeStruct) doc.ContentFunc {
	return doc.ParentTag("video", attrs...)
}

// Wbr
// Description: Line breaking opportunity.
// Parents: phrasing.
// Children: empty.
// Attributes: globals
func Wbr(attrs ...*doc.AttributeStruct) *doc.UnitTagStruct {
	return doc.UnitTag("wbr", attrs...)
}
